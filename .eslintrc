{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {},
  "extends": [
      "eslint:recommended",
      "react-native",
      "react-native/jest",
      "plugin:storybook/recommended",
      "plugin:jest-dom/recommended",
      "plugin:testing-library/react",
      "prettier"
  ],
  "plugins": [
      "jest-native",
      "testing-library",
      "promise",
      "prettier",
      "simple-import-sort",
      "@typescript-eslint"  // Add this for TypeScript linting
  ],
  "rules": {
      "simple-import-sort/imports": "error",
      "simple-import-sort/exports": "error",
      "prettier/prettier": "warn",
      "arrow-body-style": "off",
      "prefer-arrow-callback": "off",
      "prefer-const": "warn",
      "no-var": "warn",
      "no-throw-literal": "off",
      "no-unreachable": "warn",
      "import/no-anonymous-default-export": "off",
      "no-eq-null": "warn",
      "react/no-unescaped-entities": "off",
      "no-prototype-builtins": "off",
      "@typescript-eslint/no-unused-vars": [
          "warn",
          { "argsIgnorePattern": "^_", "varsIgnorePattern": "^_" }
      ],
      "@typescript-eslint/no-non-null-assertion": "off",
      "promise/always-return": "warn",
      "promise/no-return-wrap": "warn",
      "promise/param-names": "warn",
      "promise/catch-or-return": ["warn", { "allowFinally": true }],
      "promise/no-native": "off",
      "promise/no-nesting": "warn",
      "promise/no-promise-in-callback": "warn",
      "promise/no-callback-in-promise": "warn",
      "promise/avoid-new": "off",
      "promise/no-new-statics": "warn",
      "promise/no-return-in-finally": "warn",
      "promise/valid-params": "warn",
      "jest/no-disabled-tests": "off",
      "jest/no-commented-out-tests": "off",

      // Naming conventions rules
      "camelcase": ["error", { "properties": "always" }],
      "@typescript-eslint/naming-convention": [
          "error",
          {
              "selector": "variable",
              "format": ["camelCase"],
              "leadingUnderscore": "allow",
              "trailingUnderscore": "allow"
          },
          {
              "selector": "function",
              "format": ["camelCase", "PascalCase"]
          },
          {
              "selector": "typeLike",
              "format": ["PascalCase"]
          }
      ]
  }
}
