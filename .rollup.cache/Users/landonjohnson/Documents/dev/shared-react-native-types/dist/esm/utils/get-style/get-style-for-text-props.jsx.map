{"version":3,"file":"get-style-for-text-props.jsx","sourceRoot":"","sources":["../../../../src/utils/get-style/get-style-for-text-props.tsx"],"names":[],"mappings":"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","sourcesContent":["import { FontTypeEnum } from \"../../types/font-type.enum\"\nimport { TextStylePropsWithTheme } from \"../../types/text-style.props\"\nimport { capFontSize } from './cap-font-size';\n\n\nexport const getStyleForTextProps = (props: TextStylePropsWithTheme): string => {\n\tconst { theme, fontSize,maxFontSize, textColorFromTheme, fontType, fontTypeWeight, fontWeight, ...restProps } = props\n\n\tconst handleUnitProps = theme?.handleUnitProps ?? null\n\tconst handleColorFromTheme = theme?.handleColorFromTheme ?? null\n\tconst handleFontSizeProps = theme?.handleFontSizeProps ?? null\n\tconst handleFontFromTheme = theme?.handleFontFromTheme ?? null\n\tconst capFontSizeFunc = theme?.capFontSize ?? capFontSize\n\n\tconst getColor = () => {\n\t\tif (restProps.onDark) {\n\t\t\treturn theme.colors.whiteAlpha100\n\t\t}\n\t\tif (restProps.highlight) {\n\t\t\treturn theme.colors.accent\n\t\t}\n\t\tif (textColorFromTheme && theme.colors[textColorFromTheme]) {\n\t\t\treturn theme.colors[textColorFromTheme]\n\t\t}\n\t\tif (restProps.destructive) {\n\t\t\treturn theme.colors.errorColor\n\t\t}\n\t\treturn theme.colors.blackAlpha100\n\t}\n\n\tconst cssProperties = [\n\n\t\tfontType && fontTypeWeight && handleFontFromTheme ? `font-family: ${handleFontFromTheme(fontType, fontTypeWeight, theme)};` : `font-family: ${handleFontFromTheme(FontTypeEnum.Font1, \"bold\", theme)};`,\n\t\trestProps.textDecorationLine && restProps.textDecorationLine !== \"none\" ? `text-decoration-line: ${restProps.textDecorationLine};` : null,\n\t\tfontSize &&  typeof maxFontSize === undefined ? `font-size: ${handleFontSizeProps(fontSize)};` : fontSize && maxFontSize? `font-size: ${handleFontSizeProps(capFontSizeFunc(fontSize, maxFontSize))};`: null,\n\t\ttextColorFromTheme && handleColorFromTheme ? `color: ${handleColorFromTheme(textColorFromTheme, 1, theme)};` : `color: ${getColor()};`,\n\t\trestProps.flex ? `flex: ${restProps.flex};` : null,\n\t\tfontWeight ? `font-weight: ${fontWeight};` : null,\n\t\trestProps.paddingLeft ? `padding-left: ${handleUnitProps(restProps.paddingLeft)};` : null,\n\t\trestProps.paddingTop ? `padding-top: ${handleUnitProps(restProps.paddingTop)};` : null,\n\t\trestProps.fontStyle ? `font-style: ${restProps.fontStyle};` : null,\n\t\trestProps.paddingRight ? `padding-right: ${handleUnitProps(restProps.paddingRight)};` : null,\n\t\trestProps.lineHeight ? `line-height: ${handleUnitProps(restProps.lineHeight)};` : fontSize ? `line-height: ${handleUnitProps(fontSize + 6)};` : null,\n\t\trestProps.width ? `width: ${handleUnitProps(restProps.width)};` : null,\n\t\trestProps.textAlign ? `text-align: ${restProps.textAlign};` : null,\n\t\trestProps.marginTop ? `margin-top: ${handleUnitProps(restProps.marginTop)};` : null,\n\t\trestProps.marginBottom ? `margin-bottom: ${handleUnitProps(restProps.marginBottom)};` : null,\n\t\trestProps.opacity ? `opacity: ${restProps.opacity};` : null,\n\t\trestProps.marginLeft ? `margin-left: ${handleUnitProps(restProps.marginLeft)};` : null,\n\t\trestProps.marginRight ? `margin-right: ${handleUnitProps(restProps.marginRight)};` : null,\n\t\trestProps.shadowOpacity ? `text-shadow-opacity: ${restProps.shadowOpacity};` : null,\n\t\trestProps.shadowColor ? `text-shadow-color: ${restProps.shadowColor};` : null,\n\t\t(restProps.shadowOffsetX || restProps.shadowOffsetY) ? `text-shadow-offset: ${handleUnitProps(restProps.shadowOffsetX || 0)} ${handleUnitProps(restProps.shadowOffsetY || 0)};` : null,\n\t\trestProps.shadowRadius ? `text-shadow-radius: ${handleUnitProps(restProps.shadowRadius)};` : null,\n\t\trestProps.textTransform ? `text-transform: ${restProps.textTransform};` : null,\n\t]\n\n\tconst css = cssProperties.filter(Boolean).join(\"\\n\")\n\t// console.log(\"css\", css)\n\n\n\treturn css\n}\n"]}