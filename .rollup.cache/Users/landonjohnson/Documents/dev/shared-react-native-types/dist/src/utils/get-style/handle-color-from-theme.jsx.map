{"version":3,"file":"handle-color-from-theme.jsx","sourceRoot":"","sources":["../../../../src/utils/get-style/handle-color-from-theme.tsx"],"names":[],"mappings":"AAAA,OAAO,SAAS,MAAM,aAAa,CAAA;AAEnC,OAAO,EAAE,UAAU,EAAE,MAAM,gBAAgB,CAAA;AAW3C,MAAM,CAAC,MAAM,oBAAoB,GAAG,CAClC,KAA4B,EAC5B,UAAkB,CAAC,EACnB,KAAqB,EACY,EAAE;IACnC,IACE,KAAK;QACL,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACnB,KAAK;QACL,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAQ,CAAC,EACtC;QACA,OAAO,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAW,EAAE,OAAO,CAAC,CAAA;KACzD;SAAM,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;QAC9B,OAAO,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;KAC3B;SAAM;QACL,OAAO,KAAK,CAAC,MAAM,CAAC,gBAAgB,CAAA;KACrC;AACH,CAAC,CAAA","sourcesContent":["import hexToRgba from 'hex-to-rgba'\n\nimport { isValidHex } from './is-valid-hex'\nimport { ThemeInterface, ColorsInterface, ElevationObjType }from '../../types/theme.types'\n\nexport interface handleColorFromThemeInterface {\n  (\n    color: keyof ColorsInterface,\n    opacity: number,\n    theme: ThemeInterface,\n  ): string | ElevationObjType | any\n}\n\nexport const handleColorFromTheme = (\n  color: keyof ColorsInterface,\n  opacity: number = 1,\n  theme: ThemeInterface,\n): string | ElevationObjType | any => {\n  if (\n    color &&\n    theme.colors[color] &&\n    color &&\n    isValidHex(theme.colors[color] as any)\n  ) {\n    return hexToRgba(theme.colors[color] as string, opacity)\n  } else if (theme.colors[color]) {\n    return theme.colors[color]\n  } else {\n    return theme.colors.primaryTextColor\n  }\n}\n"]}