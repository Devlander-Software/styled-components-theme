{"version":3,"file":"handle-font-for-theme.jsx","sourceRoot":"","sources":["../../../../src/utils/get-style/handle-font-for-theme.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAA;AACvC,OAAO,EAAE,YAAY,EAAE,MAAM,4BAA4B,CAAA;AAIzD,MAAM,CAAC,MAAM,mBAAmB,GAAG,CACjC,QAAuC,EACvC,iBAAuC,MAAM,EAC7C,KAAqB,EACb,EAAE;IAEV,MAAM,YAAY,GAAG,QAAQ,CAAA,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAA;IAC5D,IACE,QAAQ;QACR,cAAc;QACd,QAAQ,CAAC,EAAE,KAAK,KAAK;QACrB,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC;QACzB,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,IAAI,EAC9B;QACA,OAAO,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAc,CAAA;KAC5C;SAAM,IAAI,QAAQ,IAAI,cAAc,IAAI,QAAQ,CAAC,EAAE,KAAK,KAAK,EAAE;QAC9D,OAAO,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAA;KAC7C;SAAM,IAAI,QAAQ,CAAC,EAAE,KAAK,KAAK,EAAE;QAChC,OAAO,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,IAAc,CAAA;KACxC;SAAM;QACL,OAAO,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,IAAc,CAAA;KACxC;AACH,CAAC,CAAA","sourcesContent":["import { Platform } from 'react-native'\nimport { FontTypeEnum } from '../../types/font-type.enum'\nimport { FontTypeWeight, ThemeInterface }from '../../types/theme.types'\n\n\nexport const handleFontFromTheme = (\n  fontType: keyof ThemeInterface['fonts'],\n  fontTypeWeight: keyof FontTypeWeight = 'bold',\n  theme: ThemeInterface\n): string => {\n\n  const tempFontType = fontType? fontType : FontTypeEnum.Font2\n  if (\n    fontType &&\n    fontTypeWeight &&\n    Platform.OS === 'web' &&\n    theme.fonts[tempFontType] &&\n    theme.fonts[tempFontType].name\n  ) {\n    return theme.fonts[fontType].name as string\n  } else if (fontType && fontTypeWeight && Platform.OS !== 'web') {\n    return theme.fonts[fontType][fontTypeWeight]\n  } else if (Platform.OS === 'web') {\n    return theme.fonts.Font2.name as string\n  } else {\n    return theme.fonts.Font2.bold as string\n  }\n}\n"]}