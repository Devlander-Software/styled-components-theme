{"version":3,"file":"text-input.types.js","sourceRoot":"","sources":["../../../src/types/text-input.types.ts"],"names":[],"mappings":"","sourcesContent":["\nimport { TextInputProps, ViewStyle } from 'react-native'\nimport { AutoCapitalizeEnum, DataDetectorEnum, KeyBoardTypeEnum, TextContentTypeEnum } from './text-field.types'\nimport { ContainerStyleProps } from './container-style.props.interface'\nimport { IoniconNames } from './icon-names.enum';\n\nexport interface FormInputGroupProps extends TextInputProps {\n    opacity?: number;\n    dense?: boolean;\n    renderRight?: () => JSX.Element;\n    containerStyleProps?: ViewStyle;\n    containerStyleFromTheme?: ContainerStyleProps;\n\n    renderBottom?: () => JSX.Element | null;\n    dataDetectorTypes?: DataDetectorEnum;\n    textContentType?: TextContentTypeEnum;\n    keyboardType?: KeyBoardTypeEnum;\n    secureTextEntry?: boolean;\n    disabled?: boolean;\n    errorText?: string | null | boolean | undefined;\n    error?: boolean;\n    label?: string;\n    defaultValue?: string;\n    value?: string;\n    onChangeText: (text: string) => void;\n    placeholder?: string;\n    underlineColor?: string;\n    editable?: boolean;\n    autoCapitalize?: AutoCapitalizeEnum | undefined;\n    backgroundColor?: string;\n    submitting?: boolean;\n    onSubmitEditing?: () => void;\n}\n\n\nexport interface SecureInputProps extends FormInputGroupProps {\n    secureTextOnIcon?: IoniconNames | string;\n    secureTextOffIcon?: IoniconNames | string;\n    securePressOnChange: () => void\n}\n\n\n"]}