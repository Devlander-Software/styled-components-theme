{"version":3,"file":"handle-font-size-props.jsx","sourceRoot":"","sources":["../../../../src/utils/get-style/handle-font-size-props.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,OAAO,EAAE,MAAM,kCAAkC,CAAA;AAK1D,MAAM,CAAC,MAAM,mBAAmB,GAAiC,CAC/D,WAA4B,EAAE,EAC9B,oBAA6B,EACrB,EAAE;IACV,MAAM,cAAc,GAClB,OAAO,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAA;IAClE,MAAM,gBAAgB,GAAG,oBAAoB;QAC3C,CAAC,CAAC,OAAO,CAAC,cAAc,EAAE,oBAAoB,CAAC;QAC/C,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAA;IAE3B,OAAO,GAAG,gBAAgB,IAAI,CAAA;AAChC,CAAC,CAAA","sourcesContent":["\nimport { RFValue } from 'react-native-responsive-fontsize'\n\nexport interface handleFontSizePropsInterface {\n  (fontSize: string | number | undefined): string | number | undefined | any\n}\nexport const handleFontSizeProps: handleFontSizePropsInterface = (\n  fontSize: string | number = 13,\n  standardScreenHeight?: number,\n): string => {\n  const parsedFontSize =\n    typeof fontSize === 'string' ? parseInt(fontSize, 10) : fontSize\n  const adjustedFontSize = standardScreenHeight\n    ? RFValue(parsedFontSize, standardScreenHeight)\n    : RFValue(parsedFontSize)\n\n  return `${adjustedFontSize}px`\n}\n"]}