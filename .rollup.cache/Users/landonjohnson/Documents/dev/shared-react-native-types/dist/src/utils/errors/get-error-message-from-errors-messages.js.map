{"version":3,"file":"get-error-message-from-errors-messages.js","sourceRoot":"","sources":["../../../../src/utils/errors/get-error-message-from-errors-messages.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,QAAQ,CAAC;AAEjC,MAAM,gCAAgC,GAAG,CAAC,KAAU,EAAE,MAA4B,EAAiB,EAAE;IACjG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE;QACxD,IAAI,EAAC,OAAO,EAAC,GAAG,MAAM,CAAC;QACvB,IAAI,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YACrC,IAAI,QAAQ,GAAG,OAAO,IAAI,EAAE,CAAC;YAC7B,IAAI,gBAAgB,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;YACnE,IAAI,gBAAgB,EAAE;gBACpB,OAAO,gBAAgB,CAAC;aACzB;iBAAM;gBACL,OAAO,IAAI,CAAC;aACb;SACF;aAAM;YACL,OAAO,IAAI,CAAC;SACb;KACF;SAAM;QACL,OAAO,IAAI,CAAC;KACb;AACL,CAAC,CAAC;AAEF,eAAe,gCAAgC,CAAC","sourcesContent":["import { isEmpty } from \"lodash\";\n\nconst getErrorMessageFromErrorMessages = (field: any, errors: {[key: string]: any}): string | null => {\n    if (!isEmpty(errors) && errors.hasOwnProperty('message')) {\n      let {message} = errors;\n      if (message && Array.isArray(message)) {\n        let messages = message || [];\n        let messageToBeFound = messages.find((msg) => msg.includes(field));\n        if (messageToBeFound) {\n          return messageToBeFound;\n        } else {\n          return null;\n        }\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n};\n\nexport default getErrorMessageFromErrorMessages;"]}