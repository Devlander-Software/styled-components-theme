{"version":3,"file":"get-error-message-by-field.js","sourceRoot":"","sources":["../../../../src/utils/errors/get-error-message-by-field.ts"],"names":[],"mappings":"AAAA,OAAO,8BAA8B,MAAM,gCAAgC,CAAC;AAC5E,OAAO,EAAE,OAAO,EAAE,MAAM,QAAQ,CAAC;AACjC,OAAO,gCAAgC,MAAM,0CAA0C,CAAC;AAOxF,MAAM,sBAAsB,GAAG,CAC3B,aAAgC,EAChC,MAAqB,EACF,EAAE;IAEvB,MAAM,kBAAkB,GAAG,CAAC,KAAa,EAAsB,EAAE;QAC/D,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,8BAA8B,CAAC,KAAK,EAAE,MAAM,CAAC,EAAE;YACnE,OAAO,8BAA8B,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;SACxD;aAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,gCAAgC,CAAC,KAAK,EAAE,MAAM,CAAC,EAAE;YAC5E,OAAO,gCAAgC,CAAC,KAAK,EAAE,MAAM,CAAQ,CAAA;SAChE;QACD,OAAO,SAAS,CAAC,CAAE,iDAAiD;IACxE,CAAC,CAAA;IACG,IAAI,OAAO,aAAa,KAAK,QAAQ,EAAE;QACnC,OAAO,kBAAkB,CAAC,aAAa,CAAC,CAAC;KAC5C;SAAM,IAAI,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE;QACrC,IAAI,eAAe,GAAuB,SAAS,CAAC;QACpD,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;YACxB,IAAI,kBAAkB,CAAC,CAAC,CAAC,EAAE;gBACvB,eAAe,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC;aAC3C;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,eAAe,CAAC;KAC1B;SAAM;QACH,OAAO,SAAS,CAAC;KACpB;AACL,CAAC,CAAC;AAEF,eAAe,sBAAsB,CAAC","sourcesContent":["import getErrorMessageFromErrorObject from './get-error-from-errors-object';\nimport { isEmpty } from 'lodash';\nimport getErrorMessageFromErrorMessages from './get-error-message-from-errors-messages';\n\ninterface ErrorMessages {\n    [key: string]: any;\n    message?: string[];\n}\n\nconst getErrorMessageByField = (\n    fieldsToCheck: string | string[],\n    errors: ErrorMessages\n): string | undefined  => {\n\n  const getMessageForField = (field: string): string | undefined => {\n    if (!isEmpty(errors) && getErrorMessageFromErrorObject(field, errors)) {\n        return getErrorMessageFromErrorObject(field, errors);\n    } else if (!isEmpty(errors) && getErrorMessageFromErrorMessages(field, errors)) {\n        return getErrorMessageFromErrorMessages(field, errors) as any\n    }\n    return undefined;  // Ensure this returns undefined rather than null\n}\n    if (typeof fieldsToCheck === \"string\") {\n        return getMessageForField(fieldsToCheck);\n    } else if (Array.isArray(fieldsToCheck)) {\n        let messageToReturn: string | undefined = undefined;\n        fieldsToCheck.forEach((f) => {\n            if (getMessageForField(f)) {\n                messageToReturn = getMessageForField(f);\n            }\n        });\n\n        return messageToReturn;\n    } else {\n        return undefined;\n    }\n};\n\nexport default getErrorMessageByField;\n"]}